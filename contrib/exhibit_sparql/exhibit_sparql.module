<?php
// $Id$
/**
 * exhibit_sparql.module - Provides Exhibit JSON data feeds of SPARQL queries.
 *
 * @author Arto Bendiken <http://bendiken.net/>
 * @copyright Copyright (c) 2007 Arto Bendiken. All rights reserved.
 * @license GPL <http://creativecommons.org/licenses/GPL/2.0/>
 * @package exhibit.module
 * @subpackage exhibit_sparql.module
 */

//////////////////////////////////////////////////////////////////////////////
// Core API hooks

/**
 * Implementation of hook_menu().
 */
function exhibit_sparql_menu() {
  return array(
    'exhibit/sparql/%' => array(
      'type' => MENU_CALLBACK,
      'access arguments' => array('access exhibits'),
      'page callback' => 'exhibit_output_convert',
      'page arguments' => array(2, 'exhibit_parse_sparql', 'application/sparql-results+json'),
      'file' => '../../exhibit.pages.inc',
    ),
  );
}

/**
 * Implementation of hook_nodeapi().
 */
function exhibit_sparql_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  // Add Exhibit JSON autodiscovery link to SPARQL nodes
  switch ($op) {
    case 'view':
      if ($node->type == 'sparql' && user_access('access exhibits')) {
        exhibit_add_link('node/' . $node->nid . '/exhibit-json');
      }
      break;
  }
}

//////////////////////////////////////////////////////////////////////////////
// Menu callbacks

function exhibit_parse_sparql($input) {
  return exhibit_json(sparql_parse_json($input));
}

function exhibit_output_node_sparql($node) {
  return exhibit_json(sparql_node_result($node));
}
